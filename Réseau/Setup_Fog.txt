

- Récupérer l'archive 1.2.0 de FOG (!!!).



--------------

Attention : si vous êtes en Debian 9, vous devez installer php 5 avec une procédure un peu particulière :
apt-get install apt-transport-https lsb-release ca-certificates
Get the gpg key:
wget -O /etc/apt/trusted.gpg.d/php.gpg https://packages.sury.org/php/apt.gpg
or:
curl https://packages.sury.org/php/apt.gpg | apt-key add -
Add the new repository to your sources:
echo "deb https://packages.sury.org/php/ $(lsb_release -sc) main" > /etc/apt/sources.list.d/php.list
Install PHP5.6
apt-get update
apt-get install php5.6

To switch between PHP versions:
update-alternatives --config php
... and choose.




---------------------

- Décompresser fog-1.2.0 dans /usr/src.

- Éxécuter le script /usr/src/fog_1.2.0/bin/installfog.sh;
  avec toutes les options qui vont bien.

- Configurer /etc/default/tftpd-hpa :
	# /etc/default/tftpd-hpa
	TFTP_USERNAME="root"
	TFTP_DIRECTORY="/usr/src/fog_1.4.4/packages/tftp"
	TFTP_ADDRESS="0.0.0.0:69"
	TFTP_OPTIONS="--secure"


- Configurer /etc/default/isc-dhcp-server :
	INTERFACESv4="NOM_DE_MA_BELLE_INTERFACE"
	# INTERFACESv6=""

- Configurer /etc/dhcp/dhcpd.conf :

 
option space PXE;
option PXE.mtftp-ip code 1 = ip-address;
option PXE.mtftp-cport code 2 = unsigned integer 16;
option PXE.mtftp-sport code 3 = unsigned integer 16;
option PXE.mtftp-tmout code 4 = unsigned integer 8;
option PXE.mtftp-delay code 5 = unsigned integer 8;
option arch code 93 = unsigned integer 16;
use-host-decl-names on;
ddns-update-style interim;
ignore client-updates;
subnet 192.168.20.0 netmask 255.255.255.0{
    option subnet-mask 255.255.255.0;
    range dynamic-bootp 192.168.20.10 192.168.20.250;
    default-lease-time 21600;
    max-lease-time 43200;
    option routers 192.168.20.254;
    option domain-name-servers 192.168.20.254;
    next-server 192.168.20.252;
    class "Legacy" {
        match if substring(option vendor-class-identifier, 0, 20) = "PXEClient:Arch:00000";
        filename "undionly.kkpxe";
    }
    class "UEFI-32-2" {
        match if substring(option vendor-class-identifier, 0, 20) = "PXEClient:Arch:00002";
        filename "i386-efi/ipxe.efi";
    }
    class "UEFI-32-1" {
        match if substring(option vendor-class-identifier, 0, 20) = "PXEClient:Arch:00006";
        filename "i386-efi/ipxe.efi";
    }
    class "UEFI-64-1" {
        match if substring(option vendor-class-identifier, 0, 20) = "PXEClient:Arch:00007";
        filename "ipxe.efi";
    }
    class "UEFI-64-2" {
        match if substring(option vendor-class-identifier, 0, 20) = "PXEClient:Arch:00008";
        filename "ipxe.efi";
    }
    class "UEFI-64-3" {
        match if substring(option vendor-class-identifier, 0, 20) = "PXEClient:Arch:00009";
        filename "ipxe.efi";
    }
    class "SURFACE-PRO-4" {
        match if substring(option vendor-class-identifier, 0, 32) = "PXEClient:Arch:00007:UNDI:003016";
        filename "ipxe7156.efi";
    }
    class "Apple-Intel-Netboot" {
        match if substring(option vendor-class-identifier, 0, 14) = "AAPLBSDPC/i386";
        option dhcp-parameter-request-list 1,3,17,43,60;
        if (option dhcp-message-type = 8) {
            option vendor-class-identifier "AAPLBSDPC";
            if (substring(option vendor-encapsulated-options, 0, 3) = 01:01:01) {
                # BSDP List
                option vendor-encapsulated-options 01:01:01:04:02:80:00:07:04:81:00:05:2a:09:0D:81:00:05:2a:08:69:50:58:45:2d:46:4f:47;
                filename "ipxe.efi";
            }
        }
    }
}

host formation1 {
        hardware ethernet B0:83:FE:7E:95:BC;
        fixed-address 192.168.20.129;
}

host formation2 {
		...
}



- Configurer /etc/exports :

	/images *(ro,sync,no_wdelay,no_subtree_check,insecure_locks,no_root_squash,insecure)
	/images/dev *(rw,async,no_wdelay,no_subtree_check,no_root_squash,insecure)




- Dans /usr/src/fog_1.4.4/packages/tftp , rajouter un fichier default.ipxe (chmod 755),
  qui contient ceci :

#!ipxe
cpuid --ext 29 && set arch x86_64 || set arch i386
params
param mac0 ${net0/mac}
param arch ${arch}
param platform ${platform}
param product ${product}
param manufacturer ${product}
param ipxever ${version}
param filename ${filename}
isset ${net1/mac} && param mac1 ${net1/mac} || goto bootme
isset ${net2/mac} && param mac2 ${net2/mac} || goto bootme
:bootme
chain http://192.168.20.252/fog/service/ipxe/boot.php##params




- Redémarrer isc-dhcp-server, nfs-server, tftpd-hpa.

- tester 
